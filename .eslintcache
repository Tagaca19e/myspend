[{"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\index.js":"1","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\App.js":"2","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\context\\context.js":"3","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\styles.js":"4","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\context\\contextReducer.js":"5","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\Main.jsx":"6","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Details\\Details.jsx":"7","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\styles.js":"8","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Details\\styles.js":"9","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\useTransactions.js":"10","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\List\\List.jsx":"11","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\Form\\Form.jsx":"12","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\InfoCard\\InfoCard.jsx":"13","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\constants\\categories.js":"14","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\Form\\styles.js":"15","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\utils\\formatDate.js":"16","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\List\\styles.js":"17","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Snackbar\\Snackbar.jsx":"18","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Snackbar\\styles.js":"19"},{"size":485,"mtime":1628298124266,"results":"20","hashOfConfig":"21"},{"size":2298,"mtime":1628303752715,"results":"22","hashOfConfig":"21"},{"size":1099,"mtime":1628298124265,"results":"23","hashOfConfig":"21"},{"size":551,"mtime":1628298124266,"results":"24","hashOfConfig":"21"},{"size":714,"mtime":1628298124265,"results":"25","hashOfConfig":"21"},{"size":1275,"mtime":1628302303880,"results":"26","hashOfConfig":"21"},{"size":707,"mtime":1628301243256,"results":"27","hashOfConfig":"21"},{"size":675,"mtime":1628304197910,"results":"28","hashOfConfig":"21"},{"size":391,"mtime":1628303392257,"results":"29","hashOfConfig":"21"},{"size":1302,"mtime":1628298124267,"results":"30","hashOfConfig":"21"},{"size":1689,"mtime":1628300930091,"results":"31","hashOfConfig":"21"},{"size":5042,"mtime":1628308599804,"results":"32","hashOfConfig":"21"},{"size":412,"mtime":1628298124260,"results":"33","hashOfConfig":"21"},{"size":1239,"mtime":1628307736498,"results":"34","hashOfConfig":"21"},{"size":208,"mtime":1628300990890,"results":"35","hashOfConfig":"21"},{"size":340,"mtime":1628298124267,"results":"36","hashOfConfig":"21"},{"size":420,"mtime":1628307127986,"results":"37","hashOfConfig":"21"},{"size":861,"mtime":1628307926575,"results":"38","hashOfConfig":"21"},{"size":196,"mtime":1628307862968,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"xlnsro",{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\index.js",[],["86","87"],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\App.js",["88","89","90","91","92"],"import React, { useRef, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport {\n  PushToTalkButton,\n  PushToTalkButtonContainer,\n  ErrorPanel,\n} from \"@speechly/react-ui\";\nimport Details from \"./components/Details/Details\";\nimport Main from \"./components/Main/Main\";\nimport useStyles from \"./styles\";\nimport { borders } from \"@material-ui/system\";\nimport Box from \"@material-ui/core/Box\";\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Ubuntu Mono\", \"monospace\"].join(\",\"),\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n  const { speechState } = useSpeechContext();\n  const main = useRef(null);\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) executeScroll();\n  }, [speechState]);\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"main\">\n        <Grid\n          className={classes.grid}\n          container\n          spacing={0}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ height: \"100vh\" }}\n        >\n          <Grid\n            item\n            xs={12}\n            sm={4}\n            style={{ borderRadius: \"15px\" }}\n            className={classes.mobile}\n          >\n            <Details title=\"Income\" />\n          </Grid>\n\n          <Grid\n            ref={main}\n            item\n            xs={12}\n            sm={3}\n            borderRadius=\"50%\"\n            style={{ borderRadius: \"15px\" }}\n            className={classes.main}\n          >\n            <Main />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={4}\n            style={{ borderRadius: \"15px\" }}\n            className={classes.desktop}\n          >\n            <Details title=\"Income\" />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={4}\n            borderRadius=\"50%\"\n            style={{ borderRadius: \"15px\" }}\n            className={classes.last}\n          >\n            <Details title=\"Expense\" />\n          </Grid>\n        </Grid>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\context\\context.js",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\styles.js",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\context\\contextReducer.js",["93"],"// reducer -> Takes an old state and an action, and returns a new state\nconst contextReducer = (state, action) => {\n    let transactions\n    switch(action.type) {\n        \n        case 'DELETE_TRANSACTION': \n            transactions = state.filter((t) => t.id !== action.payload)\n            localStorage.setItem('transactions', JSON.stringify(transactions))\n            return transactions\n            \n        case 'ADD_TRANSACTION':\n            transactions = [action.payload, ...state]\n            localStorage.setItem('transactions', JSON.stringify(transactions))\n\n            return transactions\n            \n        default:\n            return state\n            break\n    }\n\n}\n\nexport default contextReducer","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\styles.js",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Details\\styles.js",["94"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(() => ({\n  income: {\n    // borderBottom : '10px solid #a9abb3',\n    backgroundColor: \"white\",\n    color: \"balck\",\n    borderRadius: \"15px\",\n  },\n  expense: {\n    // borderBottom : '10px solid #a9abb3',\n    backgroundColor: \"white\",\n    color: \"balck\",\n    borderRadius: \"15px\",\n  },\n}));\n","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\useTransactions.js",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\List\\List.jsx",["95"],"import React, { useContext } from \"react\";\nimport {\n  List as MUIList,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Slide,\n} from \"@material-ui/core\";\nimport { Delete, AttachMoney } from \"@material-ui/icons\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\n\nimport useStyles from \"./styles\";\n\nconst List = () => {\n  const classes = useStyles();\n  const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext);\n\n  return (\n    <MUIList dense={false} className={classes.list}>\n      {transactions.map((transaction) => (\n        <Slide\n          direction=\"down\"\n          in\n          mountOnEnter\n          unMountOnExit\n          key={transaction.id}\n        >\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar\n                className={\n                  transaction.type === \"Income\"\n                    ? classes.avatarIncome\n                    : classes.avatarExpense\n                }\n              >\n                <AttachMoney />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={transaction.category}\n              secondary={`Rs ${transaction.amount} - ${transaction.date}`}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick=\"\"\n                onClick={() => deleteTransaction(transaction.id)}\n              >\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Slide>\n      ))}\n    </MUIList>\n  );\n};\n\nexport default List;\n","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\Form\\Form.jsx",["96"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport CustomizedSnackbar from \"../../Snackbar/Snackbar\";\nimport { v4 as uid } from \"uuid\";\nimport { useSpeechContext } from \"@speechly/react-client\";\n\nimport useStyles from \"./styles\";\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\nimport formatDate from \"../../../utils/formatDate\";\nimport \"./form.css\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const { segment } = useSpeechContext();\n  const [open, setOpen] = useState(false);\n\n  const createTransaction = () => {\n    if (!formData.date.includes(\"-\")) return;\n    const transaction = {\n      ...formData,\n      amount: Number(formData.amount),\n      id: uid(),\n    };\n\n    setOpen(true);\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_expense\")\n        setFormData({ ...formData, type: \"Expense\" });\n      else if (segment.intent.intent === \"add_income\")\n        setFormData({ ...formData, type: \"Income\" });\n      else if (\n        segment.isFinal &&\n        segment.intent.intent === \"create_transaction\"\n      )\n        return createTransaction();\n      else if (\n        segment.isFinal &&\n        segment.intent.intent === \"cancel_transaction\"\n      )\n        return setFormData(initialState);\n      segment.entities.forEach((e) => {\n        const category = `${e.value.charAt(0)}${e.value\n          .slice(1)\n          .toLowerCase()}`;\n        switch (e.type) {\n          case \"amount\":\n            setFormData({ ...formData, amount: e.value });\n            break;\n          case \"category\":\n            if (incomeCategories.map((iC) => iC.type).includes(category))\n              setFormData({ ...formData, type: \"Income\", category });\n            else if (expenseCategories.map((iC) => iC.type).includes(category))\n              setFormData({ ...formData, type: \"Expense\", category });\n            break;\n          case \"date\":\n            setFormData({ ...formData, date: e.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (\n        segment.isFinal &&\n        formData.amount &&\n        formData.category &&\n        formData.type &&\n        formData.date\n      )\n        createTransaction();\n    }\n  }, [segment]);\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n  return (\n    <Grid container spacing={2} className=\"form\">\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography\n          align=\"center\"\n          variant=\"subtitle2\"\n          gutterBottom\n          style={{ color: \"black\" }}\n        >\n          {segment && segment.words.map((w) => w.value).join(\" \")}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth style={{ color: \"black\" }}>\n          <InputLabel style={{ color: \"black\" }}>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n            style={{ color: \"black\" }}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          style={{ color: \"black\" }}\n          fullWidth\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"date\"\n          label=\"Date\"\n          fullWidth\n          value={formData.date}\n          onChange={(e) =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        onClick={createTransaction}\n        color=\"secondary\"\n        fullWidth\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Form;\n","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\InfoCard\\InfoCard.jsx",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\constants\\categories.js",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\utils\\formatDate.js",[],"C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Main\\List\\styles.js",["97"],"import { makeStyles } from \"@material-ui/core/styles\";\nimport { red, green } from \"@material-ui/core/colors\";\n\nexport default makeStyles((theme) => ({\n  avatarIncome: {\n    color: \"#fff\",\n    backgroundColor: \"#93ff96\",\n  },\n  avatarExpense: {\n    color: theme.palette.getContrastText(red[500]),\n\n    backgroundColor: \"#ff8585\",\n  },\n  list: {\n    maxHeight: \"150px\",\n    overflow: \"auto\",\n    color: \"white\",\n  },\n}));\n","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Snackbar\\Snackbar.jsx",["98"],"import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./snack.css\";\nimport useStyles from \"./styles\";\n\nconst CustomizedSnackbar = ({ open, setOpen }) => {\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"snack\">\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <MuiAlert\n          onClose={handleClose}\n          severity=\"success\"\n          elevation={6}\n          variant=\"filled\"\n        >\n          Transaction successfully created\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CustomizedSnackbar;\n","C:\\Users\\Eidmone\\Desktop\\Projects\\expenso\\src\\components\\Snackbar\\styles.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":5,"column":3,"nodeType":"105","messageId":"106","endLine":5,"endColumn":28},{"ruleId":"103","severity":1,"message":"108","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":13},{"ruleId":"103","severity":1,"message":"109","line":11,"column":10,"nodeType":"105","messageId":"106","endLine":11,"endColumn":17},{"ruleId":"103","severity":1,"message":"110","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":11},{"ruleId":"111","severity":1,"message":"112","line":19,"column":13,"nodeType":"113","messageId":"114","endLine":19,"endColumn":18},{"ruleId":"103","severity":1,"message":"115","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":52,"column":17,"nodeType":"118","endLine":52,"endColumn":66},{"ruleId":"119","severity":1,"message":"120","line":99,"column":6,"nodeType":"121","endLine":99,"endColumn":15,"suggestions":"122"},{"ruleId":"103","severity":1,"message":"123","line":2,"column":15,"nodeType":"105","messageId":"106","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"124","line":8,"column":9,"nodeType":"105","messageId":"106","endLine":8,"endColumn":16},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'PushToTalkButton' is defined but never used.","Identifier","unusedVar","'PushToTalkButtonContainer' is defined but never used.","'ErrorPanel' is defined but never used.","'borders' is defined but never used.","'Box' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'React' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["127"],"'green' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"130","text":"131"},[2765,2774],"[createTransaction, formData, segment]"]