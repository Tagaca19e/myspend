{"version":3,"sources":["context/contextReducer.js","context/context.js","components/Details/styles.js","constants/categories.js","useTransactions.js","components/Details/Details.jsx","assets/fonts/DejaVuSansMono.ttf","components/Main/styles.js","components/InfoCard/InfoCard.jsx","components/Snackbar/styles.js","components/Snackbar/Snackbar.jsx","components/Main/Form/styles.js","utils/formatDate.js","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/Main/Main.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currValue","amount","console","log","value","deleteTransaction","addTransaction","transaction","makeStyles","income","backgroundColor","color","borderRadius","expense","incomeColors","expenseColors","incomeCategories","expenseCategories","useTransactions","title","forEach","c","transactionsPerType","useContext","total","currVal","categories","category","find","filteredCategories","chartData","datasets","data","map","labels","Details","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","theme","root","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cardContent","divider","margin","isIncome","Math","round","random","InfoCard","style","textAlign","padding","width","marginTop","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","radioGroup","display","justifyContent","button","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","includes","Number","uid","useEffect","intent","isFinal","entities","e","charAt","slice","toLowerCase","iC","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","key","TextField","label","Button","onClick","avatarIncome","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unMountOnExit","ListItem","ListItemAvatar","Avatar","AttachMoney","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","Main","subheader","promo","lineHeight","Divider","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","marginBottom","grid","createMuiTheme","typography","fontFamily","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","ThemeProvider","alignItems","justify","sm","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.9f34d70d.chunk.js","sourcesContent":["// reducer -> Takes an old state and an action, and returns a new state\nconst contextReducer = (state, action) => {\n    let transactions\n    switch(action.type) {\n        \n        case 'DELETE_TRANSACTION': \n            transactions = state.filter((t) => t.id !== action.payload)\n            localStorage.setItem('transactions', JSON.stringify(transactions))\n            return transactions\n            \n        case 'ADD_TRANSACTION':\n            transactions = [action.payload, ...state]\n            localStorage.setItem('transactions', JSON.stringify(transactions))\n\n            return transactions\n            \n        default:\n            return state\n            break\n    }\n\n}\n\nexport default contextReducer","import React, {useReducer, createContext } from 'react';\n\nimport contextReducer from './contextReducer'\n\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || []\nexport const ExpenseTrackerContext = createContext(initialState)\n\nexport const Provider = ({ children }) => {\n        const [transactions, dispatch] = useReducer(contextReducer, initialState)\n\n        // Action creators \n\n        const deleteTransaction = (id) => dispatch({ type: 'DELETE_TRANSACTION', payload: id})\n        const addTransaction = (transaction) => dispatch({ type: 'ADD_TRANSACTION', payload: transaction})\n        const balance = transactions.reduce((acc, currValue) => currValue.type === 'Expense' ? acc -= currValue.amount : acc += currValue.amount\n        , 0)\n        \n        console.log(transactions)\n        return (\n            <ExpenseTrackerContext.Provider value={{\n                deleteTransaction,\n                addTransaction,\n                transactions,\n                balance\n            }}>\n                { children }\n            </ExpenseTrackerContext.Provider>\n        )\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles(() => ({\n  income: {\n    // borderBottom : '10px solid #a9abb3',\n    backgroundColor: \"white\",\n    color: \"balck\",\n    borderRadius: \"15px\",\n  },\n  expense: {\n    // borderBottom : '10px solid #a9abb3',\n    backgroundColor: \"white\",\n    color: \"balck\",\n    borderRadius: \"15px\",\n  },\n}));\n","const incomeColors = [\n  \"#00AF91\",\n  \"#007965\",\n  \"#F58634\",\n  \"#FFCC29\",\n  \"#76ff61\",\n  \"#83d681\",\n  \"#6dd660\",\n  \"#c3ffe1\",\n  \"#bfffe5\",\n];\nconst expenseColors = [\n  \"#F0134D\",\n  \"#FF6F5E\",\n  \"#40BFC1\",\n  \"#F5DEA3\",\n  \"#443737\",\n  \"#FF5200\",\n  \"#FF6363\",\n  \"#FE346E\",\n  \"#D63447\",\n  \"#FC9D9D\",\n  \"#FF2E63\",\n];\n\nexport const incomeCategories = [\n  { type: \"Business\", amount: 0, color: incomeColors[0] },\n  { type: \"Investments\", amount: 0, color: incomeColors[1] },\n  { type: \"Salary\", amount: 0, color: incomeColors[2] },\n  { type: \"Other\", amount: 0, color: incomeColors[3] },\n];\n\nexport const expenseCategories = [\n  { type: \"Bills\", amount: 0, color: expenseColors[0] },\n  { type: \"Travel\", amount: 0, color: expenseColors[1] },\n  { type: \"Food\", amount: 0, color: expenseColors[2] },\n  { type: \"Shopping\", amount: 0, color: expenseColors[3] },\n  { type: \"Entertainment\", amount: 0, color: expenseColors[4] },\n  { type: \"Other\", amount: 0, color: expenseColors[5] },\n];\n\nexport const resetCategories = () => {\n  incomeCategories.forEach((c) => (c.amount = 0));\n  expenseCategories.forEach((c) => (c.amount = 0));\n};\n","import { useContext } from 'react'\nimport { ExpenseTrackerContext } from './context/context'\n\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories'\n\nconst useTransactions = (title) => {\n        resetCategories()\n        const { transactions } = useContext(ExpenseTrackerContext)\n        const transactionsPerType = transactions.filter(t => t.type === title)\n        const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0)\n        const categories = title === 'Income' ? incomeCategories : expenseCategories\n\n        console.log({transactionsPerType, total, categories})\n\n        transactionsPerType.forEach((t) => {\n            const category = categories.find((c) => c.type === t.category)\n            if(category) \n                category.amount += t.amount\n\n            })\n\n            const filteredCategories = categories.filter((c) => c.amount > 0)\n\n            const chartData = {\n                datasets: [{\n                    data: filteredCategories.map((c) => c.amount),\n                    backgroundColor: filteredCategories.map((c) => c.color),\n                }],\n                labels: filteredCategories.map((c) => c.type),\n            }\n\n            return { total, chartData }\n}\n\nexport default useTransactions","import React from \"react\";\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport useStyles from \"./styles\";\nimport useTransactions from \"../../useTransactions\";\nimport \"../../assets/fonts/DejaVuSansMono.ttf\";\n\nconst Details = ({ title }) => {\n  const classes = useStyles();\n  const { total, chartData } = useTransactions(title);\n  return (\n    <Card className={title === \"Income\" ? classes.income : classes.expense}>\n      <CardHeader title={title} />\n      <CardContent>\n        <Typography variant=\"h5\">${total}</Typography>\n        <Doughnut data={chartData} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Details;\n","export default __webpack_public_path__ + \"static/media/DejaVuSansMono.4bb3391b.ttf\";","import { makeStyles } from \"@material-ui/core/styles\";\nimport \"../../assets/fonts/DejaVuSansMono.ttf\";\n\nexport default makeStyles((theme) => ({\n  root: {\n    //borderBottom : '10px solid #a9abb3',\n    backgroundColor: \"white\",\n    color: \"#dde0e3\",\n    borderRadius: \"15px\",\n  },\n\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  cardContent: {\n    paddingTop: 0,\n  },\n  divider: {\n    margin: \"20px 0\",\n  },\n}));\n","import React from 'react'\n\nconst isIncome = Math.round(Math.random())\n\nconst InfoCard = () => {\n    return (\n        <div style={{ textAlign: 'center', padding: '0 10%'}}>\n            Try saying:<br />\n            Add {isIncome? 'Income ': 'Expense '}\n             for {isIncome ? '10 ' : '20 '} Rupees \n            in Category Salary \n            for Next Monday\n        </div>\n    )\n}\n\nexport default InfoCard\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport \"./snack.css\";\nimport useStyles from \"./styles\";\n\nconst CustomizedSnackbar = ({ open, setOpen }) => {\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"snack\">\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <MuiAlert\n          onClose={handleClose}\n          severity=\"success\"\n          elevation={6}\n          variant=\"filled\"\n        >\n          Transaction successfully created\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CustomizedSnackbar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n  radioGroup: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    marginTop: \"20px\",\n  },\n}));\n","const formatDate = (date) => {\n    const d = new Date(date)\n    let month = `${d.getMonth() + 1}`\n    let day = `${d.getDate()}`\n    let year = `${d.getFullYear()}`\n    \n    if (month.length < 2)\n        month = `0${month}`\n    if (day.length < 2)\n        day = `0${day}`\n    return [year, month, day].join('-')\n}\n\nexport default formatDate","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport CustomizedSnackbar from \"../../Snackbar/Snackbar\";\nimport { v4 as uid } from \"uuid\";\nimport { useSpeechContext } from \"@speechly/react-client\";\n\nimport useStyles from \"./styles\";\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\nimport formatDate from \"../../../utils/formatDate\";\nimport \"./form.css\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const { segment } = useSpeechContext();\n  const [open, setOpen] = useState(false);\n\n  const createTransaction = () => {\n    if (!formData.date.includes(\"-\")) return;\n    const transaction = {\n      ...formData,\n      amount: Number(formData.amount),\n      id: uid(),\n    };\n\n    setOpen(true);\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_expense\")\n        setFormData({ ...formData, type: \"Expense\" });\n      else if (segment.intent.intent === \"add_income\")\n        setFormData({ ...formData, type: \"Income\" });\n      else if (\n        segment.isFinal &&\n        segment.intent.intent === \"create_transaction\"\n      )\n        return createTransaction();\n      else if (\n        segment.isFinal &&\n        segment.intent.intent === \"cancel_transaction\"\n      )\n        return setFormData(initialState);\n      segment.entities.forEach((e) => {\n        const category = `${e.value.charAt(0)}${e.value\n          .slice(1)\n          .toLowerCase()}`;\n        switch (e.type) {\n          case \"amount\":\n            setFormData({ ...formData, amount: e.value });\n            break;\n          case \"category\":\n            if (incomeCategories.map((iC) => iC.type).includes(category))\n              setFormData({ ...formData, type: \"Income\", category });\n            else if (expenseCategories.map((iC) => iC.type).includes(category))\n              setFormData({ ...formData, type: \"Expense\", category });\n            break;\n          case \"date\":\n            setFormData({ ...formData, date: e.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (\n        segment.isFinal &&\n        formData.amount &&\n        formData.category &&\n        formData.type &&\n        formData.date\n      )\n        createTransaction();\n    }\n  }, [segment]);\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n  return (\n    <Grid container spacing={2} className=\"form\">\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography\n          align=\"center\"\n          variant=\"subtitle2\"\n          gutterBottom\n          style={{ color: \"black\" }}\n        >\n          {segment && segment.words.map((w) => w.value).join(\" \")}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth style={{ color: \"black\" }}>\n          <InputLabel style={{ color: \"black\" }}>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n            style={{ color: \"black\" }}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          style={{ color: \"black\" }}\n          fullWidth\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"date\"\n          label=\"Date\"\n          fullWidth\n          value={formData.date}\n          onChange={(e) =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        onClick={createTransaction}\n        color=\"secondary\"\n        fullWidth\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { red, green } from \"@material-ui/core/colors\";\n\nexport default makeStyles((theme) => ({\n  avatarIncome: {\n    color: \"#fff\",\n    backgroundColor: \"#93ff96\",\n  },\n  avatarExpense: {\n    color: theme.palette.getContrastText(red[500]),\n\n    backgroundColor: \"#ff8585\",\n  },\n  list: {\n    maxHeight: \"150px\",\n    overflow: \"auto\",\n    color: \"white\",\n  },\n}));\n","import React, { useContext } from \"react\";\nimport {\n  List as MUIList,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Slide,\n} from \"@material-ui/core\";\nimport { Delete, AttachMoney } from \"@material-ui/icons\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\n\nimport useStyles from \"./styles\";\n\nconst List = () => {\n  const classes = useStyles();\n  const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext);\n\n  return (\n    <MUIList dense={false} className={classes.list}>\n      {transactions.map((transaction) => (\n        <Slide\n          direction=\"down\"\n          in\n          mountOnEnter\n          unMountOnExit\n          key={transaction.id}\n        >\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar\n                className={\n                  transaction.type === \"Income\"\n                    ? classes.avatarIncome\n                    : classes.avatarExpense\n                }\n              >\n                <AttachMoney />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={transaction.category}\n              secondary={`$ ${transaction.amount} - ${transaction.date}`}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick=\"\"\n                onClick={() => deleteTransaction(transaction.id)}\n              >\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Slide>\n      ))}\n    </MUIList>\n  );\n};\n\nexport default List;\n","import React, { useContext } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { ExpenseTrackerContext } from \"../../context/context\";\nimport InfoCard from \"../InfoCard/InfoCard\";\n\nimport Form from \"./Form/Form\";\nimport List from \"./List/List\";\n\nconst Main = () => {\n  const classes = useStyles();\n  const { balance } = useContext(ExpenseTrackerContext);\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title=\"iSpent\"\n        subheader=\"by Eidmone 2021\"\n        className={classes.promo}\n      ></CardHeader>\n      <CardContent>\n        <Typography align=\"center\" variant=\"h5\">\n          Total Balance ${balance}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          style={{ lineHeight: \"1.5em\", marginTop: \"20px\" }}\n        >\n          <InfoCard />\n        </Typography>\n        <Divider className={classes.divider} />\n        <Form />\n      </CardContent>\n      <CardContent className={classes.cardContent}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <List />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Main;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  desktop: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  mobile: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  main: {\n    [theme.breakpoints.up('sm')]: {\n      paddingBottom: '5%',\n    },\n  },\n  last: {\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(3),\n      paddingBottom: '200px',\n    },\n  },\n  grid: {\n    '& > *': {\n      margin: theme.spacing(2),\n    },\n  },\n}));","import React, { useRef, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport {\n  PushToTalkButton,\n  PushToTalkButtonContainer,\n  ErrorPanel,\n} from \"@speechly/react-ui\";\nimport Details from \"./components/Details/Details\";\nimport Main from \"./components/Main/Main\";\nimport useStyles from \"./styles\";\nimport { borders } from \"@material-ui/system\";\nimport Box from \"@material-ui/core/Box\";\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Ubuntu Mono\", \"monospace\"].join(\",\"),\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n  const { speechState } = useSpeechContext();\n  const main = useRef(null);\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) executeScroll();\n  }, [speechState]);\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"main\">\n        <Grid\n          className={classes.grid}\n          container\n          spacing={0}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ height: \"100vh\" }}\n        >\n          <Grid\n            item\n            xs={12}\n            sm={4}\n            style={{ borderRadius: \"15px\" }}\n            className={classes.mobile}\n          >\n            <Details title=\"Income\" />\n          </Grid>\n\n          <Grid\n            ref={main}\n            item\n            xs={12}\n            sm={3}\n            borderRadius=\"50%\"\n            style={{ borderRadius: \"15px\" }}\n            className={classes.main}\n          >\n            <Main />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={4}\n            style={{ borderRadius: \"15px\" }}\n            className={classes.desktop}\n          >\n            <Details title=\"Income\" />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={4}\n            borderRadius=\"50%\"\n            style={{ borderRadius: \"15px\" }}\n            className={classes.last}\n          >\n            <Details title=\"Expense\" />\n          </Grid>\n        </Grid>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from './context/context'\nimport './index.css';\nimport App from './App';\nimport './assets/fonts/DejaVuSansMono.ttf';\nimport { SpeechProvider } from '@speechly/react-client'\n\nconst appId = \"19de46da-14fc-412a-b1ae-1db9d21d8d99\"\n\nReactDOM.render(\n  <SpeechProvider appId={appId} language=\"en-US\">\n      <Provider>\n        <App />\n      </Provider>\n  </SpeechProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}