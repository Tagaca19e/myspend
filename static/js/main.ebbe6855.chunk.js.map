{"version":3,"sources":["context/contextReducer.js","context/context.js","components/Details/styles.js","constants/categories.js","useTransactions.js","components/Details/Details.jsx","assets/fonts/DejaVuSansMono.ttf","components/Main/styles.js","components/InfoCard/InfoCard.jsx","components/Snackbar/styles.js","components/Snackbar/Snackbar.jsx","components/Main/Form/styles.js","utils/formatDate.js","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/Main/Main.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currValue","amount","console","log","value","deleteTransaction","addTransaction","transaction","makeStyles","income","backgroundColor","color","borderRadius","expense","incomeColors","expenseColors","incomeCategories","expenseCategories","useTransactions","title","forEach","c","transactionsPerType","useContext","total","currVal","categories","category","find","filteredCategories","chartData","datasets","data","map","labels","Details","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","theme","root","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cardContent","divider","margin","isIncome","Math","round","random","InfoCard","style","textAlign","padding","width","marginTop","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","radioGroup","display","justifyContent","marginBottom","button","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","includes","Number","uid","useEffect","intent","isFinal","entities","e","charAt","slice","toLowerCase","iC","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","key","TextField","label","Button","onClick","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unMountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","Main","subheader","promo","lineHeight","Divider","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","createMuiTheme","typography","fontFamily","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","ThemeProvider","alignItems","justify","sm","boxShadow","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"uNAuBeA,EAtBQ,SAACC,EAAOC,GAC3B,IAAIC,EACJ,OAAOD,EAAOE,MAEV,IAAK,qBAGD,OAFAD,EAAeF,EAAMI,QAAO,SAACC,GAAD,OAAOA,EAAEC,KAAOL,EAAOM,WACnDC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUT,IAC7CA,EAEX,IAAK,kBAID,OAHAA,EAAY,CAAID,EAAOM,SAAX,mBAAuBP,IACnCQ,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUT,IAE7CA,EAEX,QACI,OAAOF,ICbbY,EAAeF,KAAKG,MAAML,aAAaM,QAAQ,kBAAoB,GAC5DC,EAAwBC,wBAAcJ,GAEtCK,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACDC,qBAAWpB,EAAgBa,GAD1B,mBAC3BV,EAD2B,KACbkB,EADa,KAO5BC,EAAUnB,EAAaoB,QAAO,SAACC,EAAKC,GAAN,MAAuC,YAAnBA,EAAUrB,KAAqBoB,GAAOC,EAAUC,OAASF,GAAOC,EAAUC,SAChI,GAGF,OADAC,QAAQC,IAAIzB,GAER,kBAACa,EAAsBE,SAAvB,CAAgCW,MAAO,CACnCC,kBARkB,SAACvB,GAAD,OAAQc,EAAS,CAAEjB,KAAM,qBAAsBI,QAASD,KAS1EwB,eARe,SAACC,GAAD,OAAiBX,EAAS,CAAEjB,KAAM,kBAAmBI,QAASwB,KAS7E7B,eACAmB,YAEEH,I,+ECtBHc,eAAW,iBAAO,CAC7BC,OAAQ,CAEJC,gBAAiB,UACjBC,MAAO,UACNC,aAAc,QAGnBC,QAAS,CAELH,gBAAiB,UACjBC,MAAO,UACPC,aAAc,YCfhBE,EAAe,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACxGC,EAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAExHC,EAAmB,CAC9B,CAAErC,KAAM,WAAYsB,OAAQ,EAAGU,MAAOG,EAAa,IACnD,CAAEnC,KAAM,cAAesB,OAAQ,EAAGU,MAAOG,EAAa,IACtD,CAAEnC,KAAM,eAAgBsB,OAAQ,EAAGU,MAAOG,EAAa,IACvD,CAAEnC,KAAM,WAAYsB,OAAQ,EAAGU,MAAOG,EAAa,IACnD,CAAEnC,KAAM,UAAWsB,OAAQ,EAAGU,MAAOG,EAAa,IAClD,CAAEnC,KAAM,QAASsB,OAAQ,EAAGU,MAAOG,EAAa,IAChD,CAAEnC,KAAM,SAAUsB,OAAQ,EAAGU,MAAOG,EAAa,IACjD,CAAEnC,KAAM,UAAWsB,OAAQ,EAAGU,MAAOG,EAAa,IAClD,CAAEnC,KAAM,gBAAiBsB,OAAQ,EAAGU,MAAOG,EAAa,KAG7CG,EAAoB,CAC/B,CAAEtC,KAAM,QAASsB,OAAQ,EAAGU,MAAOI,EAAc,IACjD,CAAEpC,KAAM,MAAOsB,OAAQ,EAAGU,MAAOI,EAAc,IAC/C,CAAEpC,KAAM,UAAWsB,OAAQ,EAAGU,MAAOI,EAAc,IACnD,CAAEpC,KAAM,SAAUsB,OAAQ,EAAGU,MAAOI,EAAc,IAClD,CAAEpC,KAAM,OAAQsB,OAAQ,EAAGU,MAAOI,EAAc,IAChD,CAAEpC,KAAM,WAAYsB,OAAQ,EAAGU,MAAOI,EAAc,IACpD,CAAEpC,KAAM,QAASsB,OAAQ,EAAGU,MAAOI,EAAc,IACjD,CAAEpC,KAAM,gBAAiBsB,OAAQ,EAAGU,MAAOI,EAAc,IACzD,CAAEpC,KAAM,QAASsB,OAAQ,EAAGU,MAAOI,EAAc,IACjD,CAAEpC,KAAM,OAAQsB,OAAQ,EAAGU,MAAOI,EAAc,IAChD,CAAEpC,KAAM,QAASsB,OAAQ,EAAGU,MAAOI,EAAc,MCQpCG,EA7BS,SAACC,GDyBvBH,EAAiBI,SAAQ,SAACC,GAAD,OAAOA,EAAEpB,OAAS,KAC3CgB,EAAkBG,SAAQ,SAACC,GAAD,OAAOA,EAAEpB,OAAS,KC1BX,IAGrBqB,EADmBC,qBAAWhC,GAA5Bb,aACiCE,QAAO,SAAAC,GAAC,OAAIA,EAAEF,OAASwC,KAC1DK,EAAQF,EAAoBxB,QAAO,SAACC,EAAK0B,GAAN,OAAkB1B,EAAO0B,EAAQxB,SAAQ,GAC5EyB,EAAuB,WAAVP,EAAqBH,EAAmBC,EAE3Df,QAAQC,IAAI,CAACmB,sBAAqBE,QAAOE,eAEzCJ,EAAoBF,SAAQ,SAACvC,GACzB,IAAM8C,EAAWD,EAAWE,MAAK,SAACP,GAAD,OAAOA,EAAE1C,OAASE,EAAE8C,YAClDA,IACCA,EAAS1B,QAAUpB,EAAEoB,WAIzB,IAAM4B,EAAqBH,EAAW9C,QAAO,SAACyC,GAAD,OAAOA,EAAEpB,OAAS,KAU/D,MAAO,CAAEuB,QAAOM,UARE,CACdC,SAAU,CAAC,CACPC,KAAMH,EAAmBI,KAAI,SAACZ,GAAD,OAAOA,EAAEpB,UACtCS,gBAAiBmB,EAAmBI,KAAI,SAACZ,GAAD,OAAOA,EAAEV,WAErDuB,OAAQL,EAAmBI,KAAI,SAACZ,GAAD,OAAOA,EAAE1C,WCNzCwD,GCtBA,IDOC,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MAETiB,EAAUC,IAFW,EAGEnB,EAAgBC,GAArCK,EAHmB,EAGnBA,MAAOM,EAHY,EAGZA,UACf,OACI,kBAACQ,EAAA,EAAD,CAAMC,UAAqB,WAAVpB,EAAqBiB,EAAQ3B,OAAS2B,EAAQvB,SAC3D,kBAAC2B,EAAA,EAAD,CAAYrB,MAAQA,IAChB,kBAACsB,EAAA,EAAD,KACZ,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,KAA6BnB,GACb,kBAAC,WAAD,CAAUQ,KAAQF,Q,SEbvBtB,eAAW,SAACoC,GAAD,MAAY,CAEpCC,KAAM,CAEJnC,gBAAiB,UACjBC,MAAO,UACPC,aAAc,QAIhBkC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYR,EAAMS,YAAYC,OAAO,YAAa,CAChDC,SAAUX,EAAMS,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,YAAa,CACXV,WAAY,GAGdW,QAAS,CACPC,OAAQ,cC9BNC,EAAWC,KAAKC,MAAMD,KAAKE,UAclBC,EAZE,WACb,OACI,yBAAKC,MAAO,CAAEC,UAAW,SAAUC,QAAS,UAA5C,cACe,6BADf,OAESP,EAAU,UAAW,WAF9B,OAGUA,EAAW,MAAQ,MAH7B,+C,gFCJOrD,eAAW,SAACoC,GAAD,MAAY,CACpCC,KAAM,CACJwB,MAAO,OACP,YAAa,CACXC,UAAW1B,EAAM2B,QAAQ,SC8BhBC,EA7BY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC1BtC,EAAUC,IAEVsC,EAAc,SAACC,EAAOC,GACT,cAAXA,GAGJH,GAAQ,IAIZ,OACI,yBAAKnC,UAAWH,EAAQS,MACpB,kBAACiC,EAAA,EAAD,CACIC,aAAe,CAACC,SAAU,MAAOC,WAAY,SAC7CR,KAAMA,EACNS,iBAAkB,IAClBC,QAASR,GAET,kBAAC,IAAD,CAAUQ,QAASR,EAAaS,SAAS,UAAUC,UAAW,EAAG1C,QAAQ,UAAzE,uC,iBCxBDnC,eAAW,iBAAO,CAE/B8E,WAAY,CACVC,QAAS,OACTC,eAAgB,SAChBC,aAAc,SAEhBC,OAAQ,CACNpB,UAAW,YCGAqB,EAbI,SAACC,GAChB,IAAMC,EAAI,IAAIC,KAAKF,GACfG,EAAK,UAAMF,EAAEG,WAAa,GAC1BC,EAAG,UAAMJ,EAAEK,WACXC,EAAI,UAAMN,EAAEO,eAMhB,OAJIL,EAAMM,OAAS,IACfN,EAAK,WAAOA,IACZE,EAAII,OAAS,IACbJ,EAAG,WAAOA,IACP,CAACE,EAAMJ,EAAOE,GAAKK,KAAK,MCC7BlH,EAAe,CACjBa,OAAQ,GACR0B,SAAU,GACVhD,KAAM,SACNiH,KAAMD,EAAW,IAAIG,OAoGVS,EAhGF,WACT,IAAMnE,EAAUC,IADD,EAEiBmE,mBAASpH,GAF1B,mBAERqH,EAFQ,KAEEC,EAFF,KAGPpG,EAAmBiB,qBAAWhC,GAA9Be,eACAqG,EAAYC,6BAAZD,QAJO,EAKSH,oBAAS,GALlB,mBAKR/B,EALQ,KAKFC,EALE,KAOTmC,EAAoB,WACtB,GAAIJ,EAASb,KAAKkB,SAAS,KAA3B,CAEA,IAAMvG,EAAW,2BAAQkG,GAAR,IAAkBxG,OAAQ8G,OAAON,EAASxG,QAASnB,GAAGkI,gBAEvEtC,GAAQ,GACRpE,EAAeC,GACfmG,EAAYtH,KAGhB6H,qBAAU,WACF,GAAGN,EAAS,CACR,GAA8B,gBAA1BA,EAAQO,OAAOA,OACfR,EAAY,2BAAKD,GAAN,IAAgB9H,KAAM,kBAChC,GAA8B,eAA1BgI,EAAQO,OAAOA,OACpBR,EAAY,2BAAKD,GAAN,IAAgB9H,KAAM,gBAChC,IAAIgI,EAAQQ,SAAqC,uBAA1BR,EAAQO,OAAOA,OACvC,OAAOL,IACN,GAAGF,EAAQQ,SAAqC,uBAA1BR,EAAQO,OAAOA,OACtC,OAAOR,EAAYtH,GACvBuH,EAAQS,SAAShG,SAAQ,SAAAiG,GACrB,IAAM1F,EAAQ,UAAM0F,EAAEjH,MAAMkH,OAAO,IAArB,OAA0BD,EAAEjH,MAAMmH,MAAM,GAAGC,eACzD,OAAQH,EAAE1I,MACN,IAAK,SACD+H,EAAY,2BAAKD,GAAN,IAAgBxG,OAAQoH,EAAEjH,SACrC,MACJ,IAAK,WACEY,EAAiBiB,KAAI,SAAAwF,GAAE,OAAIA,EAAG9I,QAAMmI,SAASnF,GAC5C+E,EAAY,2BAAKD,GAAN,IAAgB9H,KAAM,SAAUgD,cACvCV,EAAkBgB,KAAI,SAAAwF,GAAE,OAAIA,EAAG9I,QAAMmI,SAASnF,IAClD+E,EAAY,2BAAKD,GAAN,IAAgB9H,KAAM,UAAWgD,cAChD,MACJ,IAAK,OACD+E,EAAY,2BAAKD,GAAN,IAAgBb,KAAMyB,EAAEjH,aAO/CuG,EAAQQ,SAAWV,EAASxG,QAAUwG,EAAS9E,UAAY8E,EAAS9H,MAAQ8H,EAASb,MACrFiB,OAIT,CAACF,IAEJ,IAAMe,EAAuC,WAAlBjB,EAAS9H,KAAoBqC,EAAmBC,EAC3E,OACI,kBAAC0G,EAAA,EAAD,CAAMC,WAAS,EAACrD,QAAS,GACrB,kBAAC,EAAD,CAAoBE,KAAMA,EAAMC,QAASA,IACzC,kBAACiD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACpF,EAAA,EAAD,CAAYqF,MAAM,SAASpF,QAAQ,YAAYqF,cAAY,EAAE9D,MAAO,CAACvD,MAAO,UAEvEgG,GAAWA,EAAQsB,MAAMhG,KAAI,SAACiG,GAAD,OAAOA,EAAE9H,SAAOkG,KAAK,OAG3D,kBAACqB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACK,EAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,EAAA,EAAD,CAAYnE,MAAO,CAACvD,MAAO,UAA3B,QAGA,kBAAC2H,EAAA,EAAD,CAAQlI,MAAOqG,EAAS9H,KAAM4J,SAAU,SAAClB,GAAD,OAAOX,EAAY,2BAAKD,GAAN,IAAgB9H,KAAM0I,EAAEmB,OAAOpI,WACrF,kBAACqI,EAAA,EAAD,CAAUrI,MAAM,UAAhB,UACA,kBAACqI,EAAA,EAAD,CAAUrI,MAAM,WAAhB,cAIZ,kBAACuH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACK,EAAA,EAAD,CAAaC,WAAS,EAAClE,MAAO,CAACvD,MAAO,UAClC,kBAAC0H,EAAA,EAAD,CAAanE,MAAO,CAACvD,MAAO,UAA5B,YACA,kBAAC2H,EAAA,EAAD,CAAQlI,MAAOqG,EAAS9E,SAAU4G,SAAU,SAAClB,GAAD,OAAOX,EAAY,2BAAKD,GAAN,IAAgB9E,SAAU0F,EAAEmB,OAAOpI,WAChHsH,EAAmBzF,KAAI,SAACZ,GAAD,OAAO,kBAACoH,EAAA,EAAD,CAAUC,IAAKrH,EAAE1C,KAAMyB,MAAOiB,EAAE1C,MAAQ0C,EAAE1C,YAIjE,kBAACgJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACa,EAAA,EAAD,CAAWhK,KAAK,SAASiK,MAAM,SAASR,WAAS,EAAChI,MAAOqG,EAASxG,OAAQsI,SAAU,SAAClB,GAAD,OAAOX,EAAY,2BAAID,GAAL,IAAexG,OAAQoH,EAAEmB,OAAOpI,aAE1I,kBAACuH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACa,EAAA,EAAD,CAAWhK,KAAK,OAAOiK,MAAM,OAAOR,WAAS,EAAEhI,MAAOqG,EAASb,KAAM2C,SAAU,SAAClB,GAAD,OAAOX,EAAY,2BAAID,GAAL,IAAeb,KAAMD,EAAW0B,EAAEmB,OAAOpI,cAE9I,kBAACyI,EAAA,EAAD,CAAQtG,UAAWH,EAAQsD,OAAQ/C,QAAQ,WAAWmG,QAAYjC,EAAoBlG,MAAM,YAAYyH,WAAS,GAAjH,Y,0HCzGG5H,gBAAW,SAACoC,GAAD,MAAY,CACpCmG,aAAc,CACZpI,MAAO,OACPD,gBAAiBsI,KAAM,MAEzBC,cAAe,CACbtI,MAAOiC,EAAMsG,QAAQC,gBAAgBC,KAAI,MACzC1I,gBAAiB0I,KAAI,MAEvBC,KAAM,CACJC,UAAW,QACXC,SAAU,YCuBCC,GA9BF,WACT,IAAMpH,EAAUC,KADD,EAE6Bd,qBAAWhC,GAA/Cc,EAFO,EAEPA,kBAAmB3B,EAFZ,EAEYA,aAI3B,OACI,kBAAC,IAAD,CAAS+K,OAAO,EAAOlH,UAAWH,EAAQiH,MACrC3K,EAAauD,KAAI,SAAC1B,GAAD,OACd,kBAACmJ,EAAA,EAAD,CAAOC,UAAU,OAAOC,IAAE,EAACC,cAAY,EAACC,eAAa,EAACpB,IAAKnI,EAAYzB,IAC/D,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1H,UAA8B,WAAnBhC,EAAY5B,KAAkByD,EAAQ2G,aAAc3G,EAAQ6G,eAC3E,kBAACiB,GAAA,EAAD,QAGR,kBAACC,GAAA,EAAD,CAAcC,QAAS7J,EAAYoB,SAAU0I,UAAS,aAAQ9J,EAAYN,OAApB,cAAgCM,EAAYqF,QAClG,kBAAC0E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,aAAYC,KAAK,MAAMC,aAAW,SAAS3B,QAAQ,IAAnD,WAA+D,kBAAMzI,EAAkBE,EAAYzB,OAC/F,kBAAC4L,GAAA,EAAD,eCYrBC,GA5BF,WACT,IAAMvI,EAAUC,IACRxC,EAAY0B,qBAAWhC,GAAvBM,QACR,OACI,kBAACyC,EAAA,EAAD,CAAMC,UAAWH,EAAQS,MACrB,kBAACL,EAAA,EAAD,CAAYrB,MAAM,kBAAkByJ,UAAU,sBAAsBrI,UAAWH,EAAQyI,QACvF,kBAACpI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYqF,MAAM,SAASpF,QAAQ,MAAnC,mBACyB9C,GAEzB,kBAAC6C,EAAA,EAAD,CAAYC,QAAQ,YAAYuB,MAAO,CAAE4G,WAAY,QAASxG,UAAW,SACjE,kBAAC,EAAD,OAER,kBAACyG,EAAA,EAAD,CAASxI,UAAWH,EAAQuB,UAC5B,kBAAC,EAAD,OAEJ,kBAAClB,EAAA,EAAD,CAAaF,UAAWH,EAAQsB,aAC5B,kBAACiE,EAAA,EAAD,CAAMC,WAAS,EAACrD,QAAS,GACrB,kBAACoD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACV,kBAAC,GAAD,WC3BVtH,gBAAW,SAACoC,GAAD,MAAY,CACpCoI,QAAQ,eACLpI,EAAMqI,YAAYC,GAAG,MAAQ,CAC5B3F,QAAS,SAGb4F,OAAO,eACJvI,EAAMqI,YAAYG,KAAK,MAAQ,CAC9B7F,QAAS,SAGb8F,KAAK,eACFzI,EAAMqI,YAAYC,GAAG,MAAQ,CAC5BI,cAAe,OAGnBC,KAAK,eACF3I,EAAMqI,YAAYG,KAAK,MAAQ,CAC9B3F,aAAc7C,EAAM2B,QAAQ,GAC5B+G,cAAe,UAGnBE,KAAM,CACJ,QAAS,CACP5H,OAAQhB,EAAM2B,QAAQ,S,oBCftB3B,GAAQ6I,aAAe,CAC3BC,WAAY,CACVC,WAAY,CACV,cACA,aACArF,KAAK,QA0CIsF,GAvCH,WACV,IAAMxJ,EAAUC,KACRwJ,EAAgBjF,6BAAhBiF,YACFR,EAAOS,iBAAO,MAQpB,OAJA7E,qBAAU,WACH4E,IAAgBE,cAAYC,WAJPX,EAAKY,QAAQC,mBAMtC,CAACL,IAEF,kBAACM,GAAA,EAAD,CAAevJ,MAAOA,IACtB,6BACE,kBAAC+E,EAAA,EAAD,CAAMpF,UAAWH,EAAQoJ,KAAM5D,WAAS,EAACrD,QAAS,EAAG6H,WAAW,SAASC,QAAQ,SAASnI,MAAO,CAACnB,OAAQ,UAEtG,kBAAC4E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwE,GAAI,EAAGpI,MAAO,CAACqI,UAAW,oBAAqB3L,aAAc,QAAS2B,UAAWH,EAAQ+I,QAC1G,kBAAC,EAAD,CAAShK,MAAM,YAGnB,kBAACwG,EAAA,EAAD,CAAM6E,IAAKnB,EAAMxD,MAAI,EAACC,GAAI,GAAIwE,GAAI,EAAG1L,aAAa,MAAOsD,MAAO,CAACqI,UAAW,mBAAoB3L,aAAc,QAAS2B,UAAWH,EAAQiJ,MACzI,kBAAC,GAAD,OAED,kBAAC1D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwE,GAAI,EAAGpI,MAAO,CAACqI,UAAW,oBAAqB3L,aAAc,QAAS2B,UAAWH,EAAQ4I,SACxG,kBAAC,EAAD,CAAS7J,MAAM,YAEnB,kBAACwG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwE,GAAI,EAAG1L,aAAa,MAAOsD,MAAO,CAACqI,UAAW,oBAAqB3L,aAAc,QAAS2B,UAAWH,EAAQmJ,MAC9H,kBAAC,EAAD,CAASpK,MAAM,cAGnB,kBAAC,4BAAD,KACE,kBAAC,mBAAD,MACA,kBAAC,aAAD,UCxCRsL,IAASC,OACP,kBAAC,iBAAD,CAAgBC,MAHJ,uCAGkBC,SAAS,SACnC,kBAAC,EAAD,KACE,kBAAC,GAAD,QAGNC,SAASC,eAAe,W","file":"static/js/main.ebbe6855.chunk.js","sourcesContent":["// reducer -> Takes an old state and an action, and returns a new state\nconst contextReducer = (state, action) => {\n    let transactions\n    switch(action.type) {\n        \n        case 'DELETE_TRANSACTION': \n            transactions = state.filter((t) => t.id !== action.payload)\n            localStorage.setItem('transactions', JSON.stringify(transactions))\n            return transactions\n            \n        case 'ADD_TRANSACTION':\n            transactions = [action.payload, ...state]\n            localStorage.setItem('transactions', JSON.stringify(transactions))\n\n            return transactions\n            \n        default:\n            return state\n            break\n    }\n\n}\n\nexport default contextReducer","import React, {useReducer, createContext } from 'react';\n\nimport contextReducer from './contextReducer'\n\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || []\nexport const ExpenseTrackerContext = createContext(initialState)\n\nexport const Provider = ({ children }) => {\n        const [transactions, dispatch] = useReducer(contextReducer, initialState)\n\n        // Action creators \n\n        const deleteTransaction = (id) => dispatch({ type: 'DELETE_TRANSACTION', payload: id})\n        const addTransaction = (transaction) => dispatch({ type: 'ADD_TRANSACTION', payload: transaction})\n        const balance = transactions.reduce((acc, currValue) => currValue.type === 'Expense' ? acc -= currValue.amount : acc += currValue.amount\n        , 0)\n        \n        console.log(transactions)\n        return (\n            <ExpenseTrackerContext.Provider value={{\n                deleteTransaction,\n                addTransaction,\n                transactions,\n                balance\n            }}>\n                { children }\n            </ExpenseTrackerContext.Provider>\n        )\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nexport default makeStyles(() => ({\n    income: {\n        // borderBottom : '10px solid #a9abb3',\n        backgroundColor: '#25282c',\n        color: '#dde0e3',\n         borderRadius: '15px'\n\n    },\n    expense: {\n        // borderBottom : '10px solid #a9abb3',\n        backgroundColor: '#25282c',\n        color: '#dde0e3',\n        borderRadius: '15px'\n        \n    }\n}))","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\n\nexport const incomeCategories = [\n  { type: 'Business', amount: 0, color: incomeColors[0] },\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\n];\n\nexport const expenseCategories = [\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\n  { type: 'Car', amount: 0, color: expenseColors[1] },\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\n  { type: 'Food', amount: 0, color: expenseColors[4] },\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\n  { type: 'House', amount: 0, color: expenseColors[6] },\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\n  { type: 'Other', amount: 0, color: expenseColors[10] },\n];\n\nexport const resetCategories = () => {\n  incomeCategories.forEach((c) => c.amount = 0);\n  expenseCategories.forEach((c) => c.amount = 0);\n};","import { useContext } from 'react'\nimport { ExpenseTrackerContext } from './context/context'\n\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories'\n\nconst useTransactions = (title) => {\n        resetCategories()\n        const { transactions } = useContext(ExpenseTrackerContext)\n        const transactionsPerType = transactions.filter(t => t.type === title)\n        const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0)\n        const categories = title === 'Income' ? incomeCategories : expenseCategories\n\n        console.log({transactionsPerType, total, categories})\n\n        transactionsPerType.forEach((t) => {\n            const category = categories.find((c) => c.type === t.category)\n            if(category) \n                category.amount += t.amount\n\n            })\n\n            const filteredCategories = categories.filter((c) => c.amount > 0)\n\n            const chartData = {\n                datasets: [{\n                    data: filteredCategories.map((c) => c.amount),\n                    backgroundColor: filteredCategories.map((c) => c.color),\n                }],\n                labels: filteredCategories.map((c) => c.type),\n            }\n\n            return { total, chartData }\n}\n\nexport default useTransactions","import React from 'react'\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core'\nimport { Doughnut } from 'react-chartjs-2'\nimport useStyles from './styles'\nimport useTransactions from '../../useTransactions'\nimport '../../assets/fonts/DejaVuSansMono.ttf'\n\nconst Details = ({ title }) => {\n\n    const classes = useStyles()\n    const { total, chartData } = useTransactions(title)\n    return (\n        <Card className={title === 'Income' ? classes.income : classes.expense} >\n            <CardHeader title={ title }/>\n                <CardContent>\n    <Typography variant=\"h5\" >Rs{total}</Typography>\n                    <Doughnut data = {chartData}/>\n                </CardContent>\n        </Card>\n    )\n}\n\nexport default Details\n","export default __webpack_public_path__ + \"static/media/DejaVuSansMono.4bb3391b.ttf\";","import { makeStyles } from '@material-ui/core/styles';\nimport '../../assets/fonts/DejaVuSansMono.ttf'\n\nexport default makeStyles((theme) => ({\n\n  root: {\n    //borderBottom : '10px solid #a9abb3',\n    backgroundColor: '#25282c',\n    color: '#dde0e3',\n    borderRadius: '15px'\n  },\n\n  \n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  cardContent: {\n    paddingTop: 0,\n   \n  },\n  divider: {\n    margin: '20px 0',\n  },\n}));","import React from 'react'\n\nconst isIncome = Math.round(Math.random())\n\nconst InfoCard = () => {\n    return (\n        <div style={{ textAlign: 'center', padding: '0 10%'}}>\n            Try saying:<br />\n            Add {isIncome? 'Income ': 'Expense '}\n             for {isIncome ? '10 ' : '20 '} Rupees \n            in Category Salary \n            for Next Monday\n        </div>\n    )\n}\n\nexport default InfoCard\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nimport useStyles from './styles'\n\n\nconst CustomizedSnackbar = ({ open, setOpen }) => {\n    const classes = useStyles()\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway')\n            return\n        \n        setOpen(false)\n        \n}\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                anchorOrigin= {{vertical: 'top', horizontal: 'right' }}\n                open={open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n            >\n                <MuiAlert onClose={handleClose} severity=\"success\" elevation={6} variant=\"filled\">\n                        Transaction successfully created\n                </MuiAlert>\n\n            </Snackbar>\n            \n        </div>\n    )\n}\n\nexport default CustomizedSnackbar\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n\n  radioGroup: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: '-10px',\n  },\n  button: {\n    marginTop: '20px',\n  },\n}));","const formatDate = (date) => {\n    const d = new Date(date)\n    let month = `${d.getMonth() + 1}`\n    let day = `${d.getDate()}`\n    let year = `${d.getFullYear()}`\n    \n    if (month.length < 2)\n        month = `0${month}`\n    if (day.length < 2)\n        day = `0${day}`\n    return [year, month, day].join('-')\n}\n\nexport default formatDate","import React, { useState, useEffect, useContext } from 'react'\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport { ExpenseTrackerContext } from '../../../context/context'\nimport CustomizedSnackbar from '../../Snackbar/Snackbar'\nimport { v4 as uid } from 'uuid'\nimport { useSpeechContext } from '@speechly/react-client'\n\nimport useStyles from './styles'\nimport { incomeCategories, expenseCategories } from '../../../constants/categories'\nimport formatDate from '../../../utils/formatDate'\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date()),\n\n}\n\nconst Form = () => {\n    const classes = useStyles()\n    const [formData, setFormData] = useState(initialState)\n    const { addTransaction } = useContext(ExpenseTrackerContext)\n    const { segment } = useSpeechContext()\n    const [open, setOpen] = useState(false)\n\n    const createTransaction = () => {\n        if(!formData.date.includes('-'))\n            return\n        const transaction = { ...formData, amount: Number(formData.amount), id:uid() }\n\n        setOpen(true)\n        addTransaction(transaction)\n        setFormData(initialState)\n    }\n\n    useEffect(() => {\n            if(segment) {\n                if (segment.intent.intent === 'add_expense')\n                    setFormData({ ...formData, type: 'Expense'})\n                else if (segment.intent.intent === 'add_income')\n                    setFormData({ ...formData, type: 'Income'})\n                else if (segment.isFinal && segment.intent.intent === 'create_transaction')\n                    return createTransaction()\n                else if(segment.isFinal && segment.intent.intent === 'cancel_transaction')\n                    return setFormData(initialState)\n                segment.entities.forEach(e => {\n                    const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\n                    switch (e.type) {\n                        case 'amount':\n                            setFormData({ ...formData, amount: e.value})\n                            break;\n                        case 'category': \n                            if(incomeCategories.map(iC => iC.type).includes(category))\n                                setFormData({ ...formData, type: 'Income', category})\n                            else if(expenseCategories.map(iC => iC.type).includes(category))\n                                setFormData({ ...formData, type: 'Expense', category})\n                            break\n                        case 'date':\n                            setFormData({ ...formData, date: e.value})\n                            break    \n                        default:\n                            break;\n                    }\n            });\n\n            if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date)\n                createTransaction()\n            }   \n\n            \n    }, [segment])\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories    \n    return (\n        <Grid container spacing={2}>\n            <CustomizedSnackbar open={open} setOpen={setOpen}/>\n            <Grid item xs={12}>\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom  style={{color: 'white'}}>\n                  \n                   { segment && segment.words.map((w) => w.value).join(' ') }\n                </Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel style={{color: 'white'}}>\n                        Type\n                    </InputLabel>\n                    <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value})}>\n                        <MenuItem value=\"Income\" >Income</MenuItem>\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth style={{color: 'white'}}>\n                    <InputLabel  style={{color: 'white'}}>Category</InputLabel>\n                    <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value})}>\n    {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type} >{c.type}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6} >\n                <TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e) => setFormData({...formData, amount: e.target.value})}/>\n            </Grid>\n            <Grid item xs={6}>\n                <TextField type=\"date\" label=\"Date\" fullWidth  value={formData.date} onChange={(e) => setFormData({...formData, date: formatDate(e.target.value)})}/>\n            </Grid>\n            <Button className={classes.button} variant=\"outlined\" onClick = { createTransaction } color=\"secondary\" fullWidth>\n                Create\n            </Button>\n        </Grid>\n    )\n}\n\nexport default Form\n","import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  avatarIncome: {\n    color: '#fff',\n    backgroundColor: green[500],\n  },\n  avatarExpense: {\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n  },\n  list: {\n    maxHeight: '150px',\n    overflow: 'auto',\n  },\n}));","import React, { useContext } from 'react'\nimport { List as MUIList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide} from '@material-ui/core'\nimport {Delete, MoneyOff} from '@material-ui/icons'\nimport { ExpenseTrackerContext } from '../../../context/context'\n\nimport useStyles from './styles'\n\nconst List = () => {\n    const classes = useStyles()\n    const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext)\n\n   \n\n    return (\n        <MUIList dense={false} className={classes.list}>\n            {transactions.map((transaction) => (\n                <Slide direction=\"down\" in mountOnEnter unMountOnExit key={transaction.id}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={transaction.type===\"Income\" ? classes.avatarIncome: classes.avatarExpense}>\n                                    <MoneyOff />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={transaction.category} secondary={`Rs ${transaction.amount} - ${transaction.date}`}/>\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick=\"\" onClick={() => deleteTransaction(transaction.id)}>\n                                    <Delete />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                </Slide>\n            ))}\n\n        </MUIList>\n    )\n}\n\nexport default List\n","import React, { useContext } from 'react'\nimport { Grid, Card, CardHeader, CardContent, Typography, Divider } from '@material-ui/core'\nimport useStyles from './styles'\nimport { ExpenseTrackerContext } from '../../context/context'\nimport InfoCard from '../InfoCard/InfoCard'\n\n\nimport Form from './Form/Form'\nimport List from './List/List'\n\nconst Main = () => {\n    const classes = useStyles()\n    const { balance } = useContext(ExpenseTrackerContext)\n    return (\n        <Card className={classes.root}>\n            <CardHeader title='Expense Tracker' subheader='Powered by Speechly' className={classes.promo}></CardHeader>\n            <CardContent>\n                <Typography align='center' variant='h5'>    \n                        Total Balance Rs{balance}\n                </Typography>\n                <Typography variant='subtitle1' style={{ lineHeight: '1.5em', marginTop: '20px'}}>\n                        <InfoCard />\n                </Typography>\n                <Divider className={classes.divider}/>\n                <Form />\n            </CardContent>\n            <CardContent className={classes.cardContent}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                         <List /> \n                    </Grid>\n                </Grid>\n            </CardContent>\n\n        </Card>\n    )\n}\n\nexport default Main\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  desktop: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  mobile: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  main: {\n    [theme.breakpoints.up('sm')]: {\n      paddingBottom: '5%',\n    },\n  },\n  last: {\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(3),\n      paddingBottom: '200px',\n    },\n  },\n  grid: {\n    '& > *': {\n      margin: theme.spacing(2),\n    },\n  },\n}));","import React, { useRef, useEffect } from 'react'\nimport { Grid } from '@material-ui/core'\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui'\nimport Details from './components/Details/Details'\nimport Main from './components/Main/Main'\nimport useStyles from './styles'\nimport { borders } from '@material-ui/system';\nimport Box from '@material-ui/core/Box'\nimport { SpeechState, useSpeechContext } from '@speechly/react-client'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Ubuntu Mono',\n      'monospace',\n    ].join(','),\n  },});\n\nconst App = () => {\n  const classes = useStyles()\n  const { speechState } = useSpeechContext() \n  const main = useRef(null)\n  const executeScroll = () => main.current.scrollIntoView()\n  \n\n  useEffect(() => {\n      if(speechState === SpeechState.Recording)\n          executeScroll()\n  }, [speechState])\n  return (\n    <ThemeProvider theme={theme}>\n    <div >\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{height: '100vh'}}>\n        \n          <Grid item xs={12} sm={4} style={{boxShadow: '10px 5px 5px gray', borderRadius: '15px'}} className={classes.mobile}>\n            <Details title=\"Income\" />\n          </Grid>\n        \n        <Grid ref={main} item xs={12} sm={3} borderRadius=\"50%\"  style={{boxShadow: '5px 5px 5px gray', borderRadius: '15px'}} className={classes.main}>\n         <Main />\n        </Grid>\n        <Grid item xs={12} sm={4} style={{boxShadow: '10px 5px 5px gray', borderRadius: '15px'}} className={classes.desktop}>\n            <Details title=\"Income\" />\n          </Grid>\n        <Grid item xs={12} sm={4} borderRadius=\"50%\"  style={{boxShadow: '10px 5px 5px gray', borderRadius: '15px'}} className={classes.last}>\n          <Details title=\"Expense\"/>\n        </Grid>\n      </Grid>\n      <PushToTalkButtonContainer>\n        <PushToTalkButton />\n        <ErrorPanel />\n      </PushToTalkButtonContainer>\n    </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from './context/context'\nimport './index.css';\nimport App from './App';\nimport './assets/fonts/DejaVuSansMono.ttf';\nimport { SpeechProvider } from '@speechly/react-client'\n\nconst appId = \"19de46da-14fc-412a-b1ae-1db9d21d8d99\"\n\nReactDOM.render(\n  <SpeechProvider appId={appId} language=\"en-US\">\n      <Provider>\n        <App />\n      </Provider>\n  </SpeechProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}